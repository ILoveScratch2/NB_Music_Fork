name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 安装依赖
        run: yarn install --frozen-lockfile

      - name: 安装 Linux 构建依赖
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libpng-dev libxkbfile-dev xz-utils libx11-dev libxtst-dev

      - name: 构建应用
        run: yarn build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: 上传 Windows 构建产物
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: win-artifacts
          path: |
            dist/*.exe
            dist/latest.yml

      - name: 上传 macOS 构建产物
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: mac-artifacts
          path: |
            dist/*.dmg
            dist/latest-mac.yml

      - name: 上传 Linux 构建产物
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifacts
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/latest-linux.yml